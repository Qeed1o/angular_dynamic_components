{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/button/button.component.ts","./src/app/components/button/button.component.html","./src/app/components/forminput/forminput.component.ts","./src/app/components/forminput/forminput.component.html","./src/app/components/formselect/formselect.component.ts","./src/app/components/formselect/formselect.component.html","./src/app/constants.ts","./src/app/models/index.ts","./src/app/services/DynamicFieldsService.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, ComponentFactoryResolver, ComponentRef, Inject, OnInit, Type, ViewChild, ViewContainerRef, ÉµComponentType } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ForminputComponent } from './components/forminput/forminput.component';\nimport { FormselectComponent } from './components/formselect/formselect.component';\nimport { FIELDS_INJECTION_TOKEN } from './constants';\nimport { BasicField, FieldTypes } from './models';\nimport { DynamicComponentsService } from './services/DynamicFieldsService';\n\n\nconst ComponentsDictionary = {\n  [FieldTypes.Select]: FormselectComponent,\n  [FieldTypes.Input]: ForminputComponent\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n\n  @ViewChild('dyn', { read: ViewContainerRef })\n  private viewRef: ViewContainerRef;\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dynamicComponentsService: DynamicComponentsService,\n    @Inject(FIELDS_INJECTION_TOKEN) private fields: BasicField[]\n  ) {\n    this.dynamicComponentsService.setFields(this.fields);\n\n    const group = this.fields\n      .filter(f => f.type !== FieldTypes.Button)\n      .reduce( (acc, f) => ({\n        ...acc,\n        [f.name]: new FormControl(\n          f.value,\n          f.validatorOrOpts,\n          f.asyncValidator\n        )\n      }), {} )\n    this.form = this.formBuilder.group(group)\n  }\n\n  ngAfterViewInit(): void {\n    this.dynamicComponentsService\n      .setViewRef(this.viewRef)\n      .addComponents();\n    this.dynamicComponentsService.bindFormControls(this.form.controls);\n  }\n\n  get jsonForm() {\n    const controls = Object.entries(this.form.controls)\n      .reduce( (all, [key, control]) => ({\n        ...all,\n        [key]: {\n          value: control.value,\n          valid: control.valid,\n          errors: control.errors\n        }\n      }), {} )\n    return JSON.stringify(controls, null, 2)\n  }\n}\n","<div class=\"main\">\n    <h1 class='title'>test</h1>\n    <form [formGroup]=\"form\">\n        <div #dyn></div>\n    </form>\n    <div class=\"variables\">\n      <pre>{{ jsonForm }}</pre>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ForminputComponent } from './components/forminput/forminput.component';\nimport { FormselectComponent } from './components/formselect/formselect.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ComponentMap, FieldTypes } from './models';\nimport { COMPONENTS_MAP_INJECTION_TOKEN, FIELDS_INJECTION_TOKEN, InitialFields } from './constants';\nimport { ButtonComponent } from './components/button/button.component';\n\nconst map: ComponentMap = {\n  [FieldTypes.Select]: FormselectComponent,\n  [FieldTypes.Input]: ForminputComponent,\n  [FieldTypes.Button]: ButtonComponent\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ForminputComponent,\n    FormselectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    {\n      provide: COMPONENTS_MAP_INJECTION_TOKEN,\n      useValue: map\n    },\n    {\n      provide: FIELDS_INJECTION_TOKEN,\n      useValue: InitialFields\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\nimport { ButtonField } from 'src/app/models';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  @Input() data: ButtonField;\n  @Input() onClick = () => {};\n}\n","<button (click)='onClick()'>\n    {{ data.label }}\n</button>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BasicField } from 'src/app/models';\n\n@Component({\n  selector: 'app-forminput',\n  templateUrl: './forminput.component.html',\n  styleUrls: ['./forminput.component.scss'],\n  providers: [{ \n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ForminputComponent),\n    multi: true\n  }]\n})\nexport class ForminputComponent implements ControlValueAccessor {\n  @Input() data: BasicField;\n\n  private _value;\n  private onChange = (_: any) => { };\n\n  @Input()\n  set value(val: any) {\n    this._value = val;\n    this.onChange(this._value);\n  }\n  get value() {\n    return this._value;\n  }\n\n  writeValue(val: any): void {\n    this.value = val;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void { }\n}\n","<div class=\"input\" *ngIf='!!data'>\n    <!-- <label [for]=\"data.name\">{{ data.name }}</label> -->\n    <input [(ngModel)]='value' />\n</div>\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { SelectField } from 'src/app/models';\n\n@Component({\n  selector: 'app-formselect',\n  templateUrl: './formselect.component.html',\n  styleUrls: ['./formselect.component.scss'],\n  providers: [{ \n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FormselectComponent),\n    multi: true\n  }]\n})\nexport class FormselectComponent implements ControlValueAccessor {\n\n  @Input() data: SelectField;\n\n  private _value;\n  private onChange = (_: any) => { };\n\n  @Input()\n  set value(val: any) {\n    this._value = val;\n    this.onChange(this._value);\n  }\n  get value() {\n    return this._value;\n  }\n\n  writeValue(val: any): void {\n    this.value = val;\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void { }\n\n  get options() {\n    if (!this.data) return [];\n    return this.data.options;\n  }\n\n}\n","<div class=\"select\">\n    <label [for]=\"data.name\">{{ data.name }}</label>\n    <select [(ngModel)]='value'>\n        <option \n            *ngFor='let opt of options'\n            [value]='opt'\n            [label]='opt'\n        ></option>\n    </select>\n</div>\n","import { Validators } from \"@angular/forms\";\nimport { BasicField, ButtonField, FieldTypes, SelectField } from \"./models\";\n\nexport const FIELDS_INJECTION_TOKEN = 'Fields';\nexport const COMPONENTS_MAP_INJECTION_TOKEN = 'ComponentMap';\n\nexport const InitialFields: BasicField[] = [\n    {\n      name: 'age-input',\n      type: FieldTypes.Input,\n      value: 'test',\n      validatorOrOpts: [Validators.required, Validators.minLength(5)]\n    },\n    {\n      name: 'day-select',\n      type: FieldTypes.Select,\n      options: [\n        'ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº',\n        'ÐÑÐ¾ÑÐ½Ð¸Ðº',\n        'Ð¡ÑÐµÐ´Ð°',\n        'Ð§ÐµÑÐ²ÐµÑÐ³',\n        'ÐÑÑÐ½Ð¸ÑÐ°',\n        'Ð¡ÑÐ±Ð±Ð¾ÑÐ°',\n        'ÐÐ¾ÑÐºÑÐµÑÐµÐ½ÑÐµ',\n      ],\n      value: 'ÐÐ¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº',\n    } as SelectField<string>,\n    {\n      name: 'number-select',\n      type: FieldTypes.Select,\n      options: [\n        1,\n        2,\n        3,\n        4,\n        5\n      ]\n    } as SelectField<number>,\n    {\n        label: 'Submit',\n        name: 'submit-button',\n        onClick: () => console.log('submit'),\n        type: FieldTypes.Button,\n    } as ButtonField\n  ]","import { Type } from \"@angular/core\";\nimport { AbstractControlOptions, AsyncValidatorFn, ValidatorFn } from \"@angular/forms\";\n\nexport enum FieldTypes {\n    Input = 'input',\n    Select = 'select',\n    Button = 'button'\n}\n\nexport interface BasicField {\n    type: FieldTypes;\n    name: string;\n    id?: string;\n    value?: unknown;\n    validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null;\n    asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null;\n}\n\nexport interface ButtonField extends BasicField {\n    label: string;\n    onClick: () => void;\n}\n\nexport interface SelectField<T = unknown> extends BasicField {\n    options: T[];\n}\n\nexport type ComponentMap = Record<FieldTypes, Type<unknown>>\n","import { ComponentFactoryResolver, ComponentRef, Inject, Injectable, ViewContainerRef } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { COMPONENTS_MAP_INJECTION_TOKEN } from '../constants';\nimport { BasicField, ButtonField, ComponentMap, FieldTypes } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentsService {\n    private viewRef: ViewContainerRef;\n    fields: BasicField[];\n    components: { [key: string]: ComponentRef<unknown> };\n\n    constructor(\n        @Inject(COMPONENTS_MAP_INJECTION_TOKEN) private componentMap: ComponentMap,\n        private readonly componentFactoryResolver: ComponentFactoryResolver\n    ) { }\n\n    setFields(fields: BasicField[]): this { \n        this.fields = fields;\n        return this;\n    }\n    setViewRef(viewRef: ViewContainerRef): this { \n        this.viewRef = viewRef;\n        return this;\n    }\n    addComponents() {\n        this.viewRef.clear();\n        this.components = this.fields.reduce( (all, field) => {\n            const component = this.componentMap[field.type]\n            const componentFactory =\n                this.componentFactoryResolver.resolveComponentFactory(component);\n            const createdComponent = this.viewRef.createComponent(componentFactory);\n            return {\n                ...all,\n                [field.name]: createdComponent\n            }\n        }, {});\n    }\n    bindFormControls(controls: { [key: string]: AbstractControl }) {\n        for (const field of this.fields) {\n            const { name, ...restFieldProperties } = field;\n            const component = this.components[name];\n\n            const instance = component.instance as { [key: string]: any }\n            if (field.type !== FieldTypes.Button) {\n                instance.registerOnChange(val => controls[name].setValue(val));\n                instance.registerOnTouched(controls[name].markAsUntouched)\n                instance.value = controls[name].value;\n            } else {\n                instance.onClick = (field as ButtonField).onClick;\n            }\n            instance.data = restFieldProperties;\n        }\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}